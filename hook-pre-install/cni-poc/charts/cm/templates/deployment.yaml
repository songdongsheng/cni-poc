apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ include "cm.fullname" . }}
    labels:
        app.kubernetes.io/name: {{ include "cm.name" . }}
        helm.sh/chart: {{ include "cm.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
    replicas: {{ .Values.replicaCount }}
    selector:
        matchLabels:
            app.kubernetes.io/name: {{ include "cm.name" . }}
            app.kubernetes.io/instance: {{ .Release.Name }}
    template:
        metadata:
            labels:
                app.kubernetes.io/name: {{ include "cm.name" . }}
                app.kubernetes.io/instance: {{ .Release.Name }}
        spec:
            initContainers:
                - name: {{ .Chart.Name }}-wait-for-db
                  image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  command:
                      - sh
                      - "-c"
                      - |
                        until nslookup db ; do
                            echo `/bin/date "+%Y-%m-%dT%H:%M:%S%z "` [cm] waiting for db | nc {{ .Values.global.ncHost }} {{ .Values.global.ncPort }};
                            sleep 2;
                        done
                        echo `/bin/date "+%Y-%m-%dT%H:%M:%S%z "` [cm] db is up | nc {{ .Values.global.ncHost }} {{ .Values.global.ncPort }};
            containers:
                - name: {{ .Chart.Name }}
                  image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  command: ['sh', '-c']
                  args:
                      - |
                        echo `/bin/date "+%Y-%m-%dT%H:%M:%S%z "` [cm] {{.Values.global.cmHost}} starting ... | nc {{ .Values.global.ncHost }} {{ .Values.global.ncPort }};
                        sleep 20;
                        echo `/bin/date "+%Y-%m-%dT%H:%M:%S%z "` [cm] {{.Values.global.cmHost}} ready | nc {{ .Values.global.ncHost }} {{ .Values.global.ncPort }};
                        while true; do
                            nc -l -p {{ .Values.global.cmPort }} 2>&1 | nc {{ .Values.global.ncHost }} {{ .Values.global.ncPort }};
                            #echo `/bin/date "+%Y-%m-%dT%H:%M:%S%z "` [cm] {{.Values.global.cmHost}} restart | nc {{ .Values.global.ncHost }} {{ .Values.global.ncPort }};
                        done
                  ports:
                      - name: tcp
                        containerPort: {{ .Values.global.cmPort }}
                        # supported values: "SCTP", "TCP", "UDP"
                        protocol: TCP
                  livenessProbe:
                      initialDelaySeconds: 5
                      periodSeconds: 5
                      exec:
                          command:
                              - sh
                              - "-c"
                              - exit 0
                  readinessProbe:
                      initialDelaySeconds: 21
                      periodSeconds: 5
                      tcpSocket:
                          port: {{ .Values.global.cmPort }}
                  resources:
                      {{- toYaml .Values.resources | nindent 22 }}
            {{- with .Values.nodeSelector }}
            nodeSelector:
                {{- toYaml . | nindent 8 }}
            {{- end }}
        {{- with .Values.affinity }}
        affinity:
            {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.tolerations }}
        tolerations:
            {{- toYaml . | nindent 8 }}
        {{- end }}
