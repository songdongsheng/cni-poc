apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ include "db.fullname" . }}
    labels:
        app.kubernetes.io/name: {{ include "db.name" . }}
        helm.sh/chart: {{ include "db.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
    replicas: {{ .Values.replicaCount }}
    selector:
        matchLabels:
            app.kubernetes.io/name: {{ include "db.name" . }}
            app.kubernetes.io/instance: {{ .Release.Name }}
    template:
        metadata:
            labels:
                app.kubernetes.io/name: {{ include "db.name" . }}
                app.kubernetes.io/instance: {{ .Release.Name }}
        spec:
            containers:
                - name: {{ .Chart.Name }}-monitor
                  image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  command: ['sh', '-c']
                  args:
                      - |
                          echo `/bin/date "+%Y-%m-%dT%H:%M:%S%z "` [db] {{.Values.global.dbHost}} starting ... | nc {{ .Values.global.ncHost }} {{ .Values.global.ncPort }};
                          echo options timeout:1 >> /etc/resolv.conf
                          until nc -w 2 -z -v {{ .Values.global.dbHost }} {{ .Values.global.dbPort }} ; do
                              sleep 2;
                              echo options timeout:1 >> /etc/resolv.conf
                          done
                          until psql -P pager=off -h {{ .Chart.Name }} -c "SELECT 1" ${PGDB}; do
                              sleep 2
                          done
                          echo `/bin/date "+%Y-%m-%dT%H:%M:%S%z "` [db] {{.Values.global.dbHost}} ready | nc {{ .Values.global.ncHost }} {{ .Values.global.ncPort }};
                          while true; do
                              sleep 900;
                          done
                  env:
                      - name: TZ
                        value: UTC
                      - name: PGDB
                        valueFrom:
                            secretKeyRef:
                                name: db-secret
                                key: POSTGRES_DB
                      - name: PGUSER
                        valueFrom:
                            secretKeyRef:
                                name: db-secret
                                key: POSTGRES_USER
                      - name: PGPASSWORD
                        valueFrom:
                            secretKeyRef:
                                name: db-secret
                                key: POSTGRES_PASSWORD
                - name: {{ .Chart.Name }}
                  image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
                  imagePullPolicy: {{ .Values.image.pullPolicy }}
                  ports:
                      - name: tcp
                        containerPort: {{ .Values.global.dbPort }}
                          # supported values: "SCTP", "TCP", "UDP"
                        protocol: TCP
                  env:
                      - name: TZ
                        value: UTC
                      - name: POSTGRES_DB
                        valueFrom:
                            secretKeyRef:
                                name: db-secret
                                key: POSTGRES_DB
                      - name: POSTGRES_USER
                        valueFrom:
                            secretKeyRef:
                                name: db-secret
                                key: POSTGRES_USER
                      - name: POSTGRES_PASSWORD
                        valueFrom:
                            secretKeyRef:
                                name: db-secret
                                key: POSTGRES_PASSWORD
                  livenessProbe:
                      initialDelaySeconds: 5
                      periodSeconds: 5
                      exec:
                          command:
                              - sh
                              - "-c"
                              - exit 0
                  readinessProbe:
                      initialDelaySeconds: 21
                      periodSeconds: 1
                      exec:
                          command:
                              - sh
                              - "-c"
                              - psql -U postgres -c "SELECT 1"
                  resources:
                      {{- toYaml .Values.resources | nindent 22 }}
            {{- with .Values.nodeSelector }}
            nodeSelector:
                {{- toYaml . | nindent 16 }}
            {{- end }}
        {{- with .Values.affinity }}
        affinity:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.tolerations }}
        tolerations:
            {{- toYaml . | nindent 12 }}
        {{- end }}
